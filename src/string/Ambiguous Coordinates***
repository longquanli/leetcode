#Time O(n^3) space(n^3)
#consider about possibilities
#0xxx0 -> []
#0xxxx -> 0.xxxx
#xxxx0 -> xxxx0
#others -> '.' can be at any position between string
class Solution:
    def ambiguousCoordinates(self, S):
        """
        :type S: str
        :rtype: List[str]
        """
        S = S[1:-1]
        def f(S):
            if not S or len(S) > 1 and S[0] == S[-1] == '0':
                return []
            if S[-1] == '0':
                return [S]
            if S[0] == '0':
                return [S[0] + '.' + S[1:]]
            #consider about '.'
            return [S] + [S[:i] + '.' + S[i:] for i in range(1, len(S))]
        #used for ','
        return ['(%s, %s)' % (a, b) for i in range(len(S)) for a, b in itertools.product(f(S[:i]), f(S[i:]))]
