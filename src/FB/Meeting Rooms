#Given an array of meeting time intervals consisting of start and end times [[s1,e1],[s2,e2],...] 
(si < ei), determine if a person could attend all meetings.

#Time O(nlgn) Space(N)
class Solution(object):
    def canAttendMeetings(self, intervals):
        """
        :type intervals: List[Interval]
        :rtype: bool
        """
        startArr = [0] * len(intervals)
        endArr = [0] * len(intervals)
        for i in range(len(intervals)):
            startArr[i] = intervals[i].start
            endArr[i] = intervals[i].end
        startArr.sort()
        endArr.sort()
        for i in range(1, len(startArr)):
            if startArr[i] < endArr[i - 1]:
                return False
        return True
       
#Version II Time(nlgn) Space(1)
class Solution(object):
    def canAttendMeetings(self, intervals):
        """
        :type intervals: List[Interval]
        :rtype: bool
        """
        intervals = sorted(intervals, key = lambda k: k.start)
        for i in range(1, len(intervals)):
            if intervals[i].start < intervals[i - 1].end:
                return False
        return True
