

#Version I time exceed
class Solution:
    def largestPalindrome(self, n):
        """
        :type n: int
        :rtype: int
        """
        maxvalue = -1
        if n == 0:
            return 0
        def ispalindrome(num):
            if num % 10 == 0:
                return False
            cur = 0
            while cur < num:
                cur = num % 10 + cur * 10
                num = num // 10
            return cur == num or num == cur // 10
        peak = 0
        while n > 0:
            peak = peak * 10 + 9
            n -= 1
        for i in range(1, peak + 1):
            for j in range(1, peak + 1):
                cur = i * j
                if ispalindrome(cur):
                    maxvalue = max(maxvalue, cur)
        return maxvalue % 1337
       
#Version II precompute 
class Solution:
    def largestPalindrome(self, n):
        ans = [9, 987, 123, 597, 677, 1218, 877, 475]
        return ans[n - 1]
        
