Given two integers n and k, you need to construct a list which contains n different positive integers ranging from 1 to n and obeys the following requirement: 
Suppose this list is [a1, a2, a3, ... , an], then the list [|a1 - a2|, |a2 - a3|, |a3 - a4|, ... , |an-1 - an|] has exactly k distinct integers. 
If there are multiple answers, print any of them. 

#Version I: Brute force time O(n!) Space O(n)
class Solution(object):
    def constructArray(self, n, k):
        seen = [False] * n
        def num_uniq_diffs(arr):
            ans = 0
            for i in range(n):
                seen[i] = False
            for i range(len(arr) - 1):
                diff = abs(arr[i] - arr[i + 1])
                if not seen[diff]:
                    ans += 1
                    seen[diff] = True
             return ans
        for poss in itertools.permutations(range(1, n+1)):
            if num_uniq_diffs(poss) == k:
                return poss
             
#Version II:  Time O(nk) Space O(nk)
class Solution(object):
    def constructArray(self, n, k):
        """
        :type n: int
        :type k: int
        :rtype: List[int]
        """
        ans = range(1, n + 1)
        for i in range(1, k):
            ans[i:] = ans[:i-1:-1]
        return ans
 #Version III: Time O(n) Space O(n)
 class Solution(object):
    def constructArray(self, n, k):
        """
        :type n: int
        :type k: int
        :rtype: List[int]
        """
        ans = list(range(1, n - k))
        for i in range(k + 1):
            if i % 2 == 0:
                ans.append(n - k + i / 2)
            else:
                ans.append(n - i / 2)
        return ans
